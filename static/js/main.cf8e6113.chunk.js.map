{"version":3,"sources":["reportWebVitals.js","index.jsx","context/index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","lazy","ReactDOM","render","StrictMode","fallback","document","getElementById","AppContext","createContext","AppProvider","children","useState","countries","setContries","globalState","filtered","setFiltered","Provider","value"],"mappings":"qLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCCRQ,EAAMC,gBAAK,kBAAM,sDAIvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SANA,kBAAM,4CAMhB,SACE,cAACL,EAAD,UAINM,SAASC,eAAe,SAM1BhB,K,4HCxBMiB,EAAaC,wBAAc,IAE3BC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAAS,IADN,mBAC7BC,EAD6B,KAClBC,EADkB,OAGJF,mBAAS,IAHL,mBAK9BG,EAAc,CAClBF,YACAC,cACAE,SARkC,KASlCC,YATkC,MAYpC,OACE,cAACT,EAAWU,SAAZ,CAAqBC,MAAOJ,EAA5B,SACGJ,O","file":"static/js/main.cf8e6113.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { lazy, Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/main.css\";\n\nimport { AppProvider } from \"./context\";\n//import App from \"./routes\";\n\nconst App = lazy(() => import(\"./routes\"));\nconst Loading = () => <p>Loading...</p>;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Suspense fallback={Loading}>\n        <App />\n      </Suspense>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createContext, useState } from \"react\";\n\nconst AppContext = createContext({});\n\nconst AppProvider = ({ children }) => {\n  const [countries, setContries] = useState([]);\n\n  const [filtered, setFiltered] = useState([]);\n\n  const globalState = {\n    countries,\n    setContries,\n    filtered,\n    setFiltered,\n  };\n\n  return (\n    <AppContext.Provider value={globalState}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppContext, AppProvider };\n"],"sourceRoot":""}